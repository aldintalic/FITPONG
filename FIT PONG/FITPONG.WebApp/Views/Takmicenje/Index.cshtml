@using FIT_PONG.ViewModels.TakmicenjeVMs;
@using ReflectionIT.Mvc;
@using ReflectionIT.Mvc.Paging;
@addTagHelper *, ReflectionIT.Mvc.Paging
@model PagingList<TakmicenjeVM>
@{
    ViewData["Title"] = "Index";
}
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>


    .css-table {
        display: table;
        border-collapse: collapse;
        box-sizing: border-box;
        border-top: 1px solid #dee2e6;
        margin-bottom: 1rem;
        width: 100%;
        overflow: scroll;
    }

    .css-table-header {
        display: table-header-group;
        font-weight: bold;
        background-color: rgb(191, 191, 191);
    }

    .css-table-body {
        display: table-row-group;
    }

    .css-table-row {
        display: table-row;
        text-decoration: none;
        color: black;
    }

        .css-table-row:hover {
            background-color: lightgray;
            cursor: pointer;
            text-decoration: none;
        }

        .css-table-header div,
        .css-table-row div {
            display: table-cell;
            padding: 0.75rem;
            border-top: 1px solid #dee2e6;
        }

    .css-table-header div {
        text-align: center;
        border: 1px solid rgb(255, 255, 255);
    }
</style>
<a class="btn btn-success" asp-controller="Takmicenje" asp-action="Dodaj">Kreiraj novo takmičenje</a>
<hr />
@if (Model.Count() == 0)
{
    <p>Nema trenutno pohranjenih takmičenja</p>
}
else
{
    <nav aria-label="Takmicenja">
        @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
    </nav>
    <div class="css-table">
        <div class="css-table-row">
            <div class="css-table-header">@Html.SortableHeaderFor(x=>x.Naziv , "-Naziv")</div>
            <div class="css-table-header">@Html.SortableHeaderFor(x => x.MinimalniELO, "-MinimalniELO")</div>
            <div class="css-table-header">@Html.SortableHeaderFor(x => x.Kategorija, "-Kategorija")</div>
            <div class="css-table-header">@Html.SortableHeaderFor(x => x.Sistem, "-Sistem")</div>
            <div class="css-table-header">@Html.SortableHeaderFor(x => x.Vrsta, "-Vrsta")</div>
            <div class="css-table-header">@Html.SortableHeaderFor(x => x.DatumZavrsetkaPrijava, "-DatumZavrsetkaPrijava")</div>
            <div class="css-table-header">@Html.SortableHeaderFor(x => x.BrojPrijavljenih, "BrojPrijavljenih")</div>
            <div class="css-table-header">@Html.SortableHeaderFor(x => x.Status, "Status")</div>
        </div>
        @foreach (var x in Model)
        {
            <a class="css-table-row" href="/Takmicenje/Prikaz?id=@x.ID">
                <div>@x.Naziv</div>
                <div>@x.MinimalniELO</div>
                <div>@x.Kategorija</div>
                <div>@x.Sistem</div>
                <div>@x.Vrsta</div>
                <div>@x.DatumZavrsetkaPrijava.GetValueOrDefault().ToLongDateString()</div>
                <div>@x.BrojPrijavljenih</div>
                <div>@x.Status</div>
            </a>
        }
    </div>

}